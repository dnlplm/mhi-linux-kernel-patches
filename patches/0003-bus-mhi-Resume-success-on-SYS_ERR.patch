From 8a291d5edfe857e742852c18b04d3d759c0d7b80 Mon Sep 17 00:00:00 2001
From: Daniele Palmas <dnlplm@gmail.com>
Date: Thu, 7 Apr 2022 10:04:01 +0200
Subject: [PATCH 03/12] bus: mhi: Resume success on SYS_ERR

Signed-off-by: Loic Poulain <loic.poulain@linaro.org>
Signed-off-by: Daniele Palmas <dnlplm@gmail.com>
---
 drivers/bus/mhi/core/pm.c | 16 ++++++++++++++++
 1 file changed, 16 insertions(+)

diff --git a/drivers/bus/mhi/core/pm.c b/drivers/bus/mhi/core/pm.c
index bb9a2043f3a2..e165e0f5b0f8 100644
--- a/drivers/bus/mhi/core/pm.c
+++ b/drivers/bus/mhi/core/pm.c
@@ -898,6 +898,22 @@ static int __mhi_pm_resume(struct mhi_controller *mhi_cntrl, bool force)
 	if (MHI_PM_IN_ERROR_STATE(mhi_cntrl->pm_state))
 		return -EIO;
 
+	if (mhi_get_mhi_state(mhi_cntrl) == MHI_STATE_SYS_ERR) {
+		/* If we are in SYS_ERR state, let MHI stack manages the error
+		 * and resume successfully.
+		 */
+		dev_warn(dev, "Entered error while suspended\n");
+		cur_state = mhi_tryset_pm_state(mhi_cntrl, MHI_PM_SYS_ERR_DETECT);
+		if (cur_state != MHI_PM_SYS_ERR_DETECT) {
+			dev_dbg(dev,
+				"Error setting to PM state: %s from: %s\n",
+				to_mhi_pm_state_str(MHI_PM_SYS_ERR_DETECT),
+				to_mhi_pm_state_str(mhi_cntrl->pm_state));
+		}
+		mhi_pm_sys_err_handler(mhi_cntrl);
+		return 0;
+	}
+
 	if (mhi_get_mhi_state(mhi_cntrl) != MHI_STATE_M3) {
 		dev_warn(dev, "Resuming from non M3 state (%s)\n",
 			 TO_MHI_STATE_STR(mhi_get_mhi_state(mhi_cntrl)));
-- 
2.32.0

